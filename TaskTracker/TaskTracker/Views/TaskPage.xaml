<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:resources="clr-namespace:TaskTracker.Resources"
             xmlns:textInputLayout="clr-namespace:Syncfusion.XForms.TextInputLayout;assembly=Syncfusion.Core.XForms"
             xmlns:popupLayout="clr-namespace:Syncfusion.XForms.PopupLayout;assembly=Syncfusion.SfPopupLayout.XForms"
             xmlns:buttons="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
             xmlns:converters="clr-namespace:TaskTracker.Converters"
             x:Class="TaskTracker.Views.TaskPage">

    <ContentPage.Resources>
        <converters:BoolNegateConverter x:Key="NegateConverter"/>
    </ContentPage.Resources>

    <ContentPage.ToolbarItems>
        <ToolbarItem Order="Primary" Text="{resources:Translate Accept}" Command="{Binding SaveTaskCommand}"/>
        <ToolbarItem Order="Secondary" Text="{resources:Translate Move}" Command="{Binding MoveTaskButtonCommand}"/>
        <ToolbarItem Order="Secondary" Text="{resources:Translate Delete}" Command="{Binding DeleteTaskButtonCommand}"/>
        <ToolbarItem Order="Secondary" Text="{resources:Translate Refresh}" Command="{Binding RefreshCommand}"/>
    </ContentPage.ToolbarItems>

    <ContentPage.Content>

        <popupLayout:SfPopupLayout x:Name="TaskPopup">
            <popupLayout:SfPopupLayout.Content>

                <Grid>
                    <StackLayout Spacing="10" Padding="5,30" Opacity="{Binding ControlsOpacity}" 
                                 IsEnabled="{Binding ShowWaitForm, Converter={StaticResource NegateConverter}}">
                        <Frame>
                            <textInputLayout:SfTextInputLayout BackgroundColor="Transparent" HeightRequest="50" 
                                                               FocusedStrokeWidth="2" UnfocusedStrokeWidth="0">
                                <Entry BackgroundColor="Transparent" Text="{Binding SelectedTask.Name}"/>
                            </textInputLayout:SfTextInputLayout>
                        </Frame>

                        <textInputLayout:SfTextInputLayout Padding="0,0,0,10" Hint="{resources:Translate TaskDescription}" 
                                                           HeightRequest="50" FocusedStrokeWidth="2" UnfocusedStrokeWidth="0">
                            <Editor Text="{Binding SelectedTask.Description}"/>
                        </textInputLayout:SfTextInputLayout>

                        <Frame>
                            <StackLayout Orientation="Vertical">
                                <Label Text="{resources:Translate AssignedUser}" FontSize="Medium"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width=".9*"/>
                                    </Grid.ColumnDefinitions>

                                    <FlexLayout Grid.Column="0" HorizontalOptions="Start" >
                                        <Frame HeightRequest="40" WidthRequest="40" CornerRadius="20" Padding="1" BackgroundColor="LightBlue">
                                            <Image Scale="0.7" Source="{Binding SelectedTask.AssignedUser.Image}"/>
                                        </Frame>
                                    </FlexLayout>

                                    <Label Grid.Column="1" Text="{Binding SelectedTask.AssignedUser.Login}" TextColor="Black" FontSize="Medium" 
                               HorizontalTextAlignment="Start" VerticalTextAlignment="Center" HorizontalOptions="StartAndExpand"/>

                                    <Grid.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding EditAssignedUserButtonCommand}"/>
                                    </Grid.GestureRecognizers>

                                </Grid>
                            </StackLayout>
                        </Frame>

                        <buttons:SfCheckBox Text="{resources:Translate IsTaskDone}" IsChecked="{Binding SelectedTask.IsDone}"/>

                    </StackLayout>

                    <ActivityIndicator IsRunning="{Binding ShowWaitForm}" HorizontalOptions="Center"/>

                </Grid>

            </popupLayout:SfPopupLayout.Content>
        </popupLayout:SfPopupLayout>

    </ContentPage.Content>
</ContentPage>
